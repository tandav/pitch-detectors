[project]
name = "pitch-detectors"
version = "0.6.0"
authors = [
    {name = "Alexander Rodionov", email = "tandav@tandav.me"},
]
description = "collection of pitch detection algorithms with unified interface"
requires-python = ">=3.8,<3.13"
dependencies = [
    "AMFM-decompy",
    "crepe>=0.0.16",  # https://github.com/marl/crepe/pull/103
    "dsplib>=0.9.0",
    "librosa",
    "numpy<2.0",  # todo: upgrade after tensorflow will support it
    "praat-parselmouth>=0.4.3",
    "pyreaper>=0.0.9",
    "pysptk",
    "pyworld>=0.3.2",
    "resampy",
    "scipy",
    "tensorflow",
    "tensorflow-hub",
    "torch<=2.3.1",  # greater version breaks tensorflow-gpu-based algorithms (gpu unavailable error)
    "torch-yin",
    "torchcrepe>=0.0.18",
    "penn",
    "pydantic>=2.0",
]

[project.optional-dependencies]
dev = [
    "bumpver",
    "pre-commit",
    "pytest",
    "pytest-order",
    "pytest-cov",
    "pytest-env",
    "mir_eval",
    "tqdm",
    "redis",
    "musiclib==2.1.0",
    "python-dotenv",
    "tabulate",
    "s3fs",
]

[project.urls]
source = "https://github.com/tandav/pitch-detectors"
# docs = "https://tandav.github.io/pitch-detectors/"
issues = "https://github.com/tandav/pitch-detectors/issues"
"release notes" = "https://github.com/tandav/pitch-detectors/releases"

# ==============================================================================

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

# [tool.setuptools]
# packages = ["pitch_detectors"]

[tool.setuptools.packages.find]
exclude = ["data*"]

# ==============================================================================

[tool.bumpver]
current_version = "v0.6.0"
version_pattern = "vMAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    '^version = "{pep440_version}"',
    '^current_version = "{version}"',
]
"pitch_detectors/__init__.py" = [
    "^__version__ = '{pep440_version}'",
]

# ==============================================================================

[tool.mypy]
# todo: review this
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
implicit_reexport = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
plugins = [
    "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

# ==============================================================================

[tool.ruff.lint]
extend-select = [
    "W",
    "C",
    "I",
    "SIM",
    "TCH",
    "C4",
    "S",
    "BLE",
    "B",
    "T10",
    "INP",
    "PIE",
    "PL",
    "RUF",
]
ignore = [
    "E501",  # line too long
    "PLR0913",
    "TCH003",
    "S603",
]

[tool.ruff.lint.per-file-ignores]
"examples/*" = ["INP001"]
"scripts/*" = ["INP001", "S101"]
"tests/*" = ["S101"]

[tool.ruff.lint.isort]
force-single-line = true

# ==============================================================================

[tool.pylint.MASTER]
load-plugins=[
    "pylint_per_file_ignores",
]

[tool.pylint.messages-control]
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "line-too-long",
    "import-outside-toplevel",
    "unused-variable",
    "too-many-arguments",
    "import-error",
    "too-few-public-methods",
    "unspecified-encoding",
    "redefined-outer-name",
    "too-many-locals",
    "invalid-name",
    "protected-access",
    "cyclic-import",
]

[tool.pylint-per-file-ignores]
"/tests/" = "redefined-outer-name"


# ==============================================================================

[tool.autopep8]
ignore="E501,E701"
recursive = true
aggressive = 3

# ==============================================================================

[tool.pyright]
venvPath = "/home/tandav/.cache/virtualenvs"
venv = "pitch-detectors"

# ==============================================================================

[tool.pytest.ini_options]
filterwarnings = [
    "ignore:Type google._upb._message.ScalarMapContainer uses PyType_Spec with a metaclass that has custom tp_new.:DeprecationWarning",
    "ignore:Type google._upb._message.MessageMapContainer uses PyType_Spec with a metaclass that has custom tp_new.:DeprecationWarning",
]

# ==============================================================================
